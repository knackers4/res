name: reLCS premake amd64

on:
  pull_request:
  push:
  workflow_dispatch:
env:
  GLFW_VER: "3.4"
  GLFW_BASE: "glfw-3.4.bin.WIN64"
  GLFW_FILE: "glfw-3.4.bin.WIN64.zip"
  GLFW_URL: "https://github.com/glfw/glfw/releases/download/3.4/glfw-3.4.bin.WIN64.zip"
jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [win-amd64-librw_d3d9-oal, win-amd64-librw_gl3_glfw-oal]
        buildtype: [Debug, Release]
    steps:
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    - uses: actions/checkout@v4.1.7
      with:
        submodules: 'true'
    - if: ${{ matrix.platform }} == "win-amd64-librw_gl3_glfw-oal"
      name: Download glfw
      uses: carlosperate/download-file-action@v2.0.2
      with:
        file-url: ${{env.GLFW_URL}}
    - if: ${{ matrix.platform }} == "win-amd64-librw_gl3_glfw-oal"
      name: Unpack archives
      run: |
          7z x ${{env.GLFW_FILE}}
    - name: Configure build
      run: |
        ./premake5 vs2022 --with-librw --no-full-paths --glfwdir64=${{env.GLFW_BASE}}
    - name: Build
      run: |
        msbuild -m build/reLCS.sln /property:Configuration=${{matrix.buildtype}} /property:Platform=${{matrix.platform}}
    - name: Upload artifact to actions
      uses: actions/upload-artifact@v4.4.0
      with:
        name: reLCS_${{matrix.buildtype}}_${{matrix.platform}}
        path: ./assets/*
    - name: Get release info
      id: release_info
      uses: cardinalby/git-get-release-action@1.2.4
      env:
       GITHUB_TOKEN: ${{ github.token }}
      with:
        tag: relcs
    - name: Upload Release
      uses: ncipollo/release-action@v1.14.0
      with:
        token: ${{ github.token }}
        allowUpdates: true
        name: ${{ steps.release_info.outputs.name }}
        body: ${{ steps.release_info.outputs.body }}
        tag: ${{ steps.release_info.outputs.tag_name }}
        artifacts: assets/*.exe
    - name: Update Tag
      uses: richardsimko/update-tag@v1.0.6
      with:
        tag_name: ${{ steps.release_info.outputs.tag_name }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

